img {
    width: 250px;
}

/* transform : 변형과 관련된 속성 */

/* 
css 속성 작성 시 크로스 브라우저
(브라우저가 달라지는 경우) 처리 방법

-ms- : 마이크로 소프트 (익스플로어, 엣지)
-webkit- : 크롬, 사파리
-o- : 오페라
-moz- : 파이어폭스
*/

/* 좌우 이동 */
.trans-x-2d:hover {
    -webkit-transform: translateX(100px);
    -ms-transform: translateX(100px);
    transform: translateX(100px); /* 이 명령어로 웬만해서 적용됨 */
}

/* 상하 이동 */
.trans-y-2d:hover {
    transform: translateY(100px); 
}

/* 대각선 이동 */
.trans-xy-2d:hover {
    transform: translate(100px, -100px);
}  

/* 가로방향 확대/축소 */
.trans-x-scale-2d:hover {
    transform: scaleX(2);
    /* transform: scaleX(0.5); */ /* 축소 */
    margin-left: 200px;
}

/* 세로방향 확대/축소 */
.trans-y-scale-2d:hover {
    transform: scaleY(2);
    /* transform: scaleY(0.5); */ /* 축소 */
    margin-top: 100px;
}

/* 대각선 확대/축소 */
.trans-scale-2d:hover{
    transform: scale(2, 2);
    margin: 150px 150px;
}

/* 요소 회전 */
.trans-rotate:hover{
    transform: rotate(180deg);
}

/* -------------------------------------- */

/* 3차원 변형 */

/* x, y, z축 이동 */
.trans-3d:hover {
    /* perspective (z축 길이) : 원근법 적용 */
    transform: perspective(300px) translate3d(50px, 50px, 100px);
}

.trans-rotate-x-3d {
    transform: perspective(300px) rotateX(45deg);
}

.trans-rotate-y-3d {
    transform: perspective(300px) rotateY(45deg);
}

.trans-rotate-z-3d {
    transform: perspective(300px) rotateZ(45deg);
}

/* -------------------------------------- */

/* transition */

.box {
    width: 150px;
    height: 150px;
    background-color: red;
    border: 1px solid black;
}

.test1:hover {
    background-color: yellow;
    transition-duration: 1s;
}

.test2:hover {
    transform: rotate(360deg);
    background-color: skyblue;

    /* 테두리 모서리 곡률 속성 */
    border-radius: 50%;
}

/* 
transition-duration 효과를 hover {안에 넣으면}
바뀔때만 모션이 일어나고 돌아오는 모션은 없으나
따로 다른 클래스를 선언해서 그곳에 별도로 
transition-duration 효과를 선언하면 바뀔 때 돌아올때
둘 다 모션이 적용됨
*/
.test2 {
    transition-duration: 3s;
}

/* -------------------------------------- */

/* 스타일 변형 진행 속도 조정 */
.test3 {
    transition-duration: 5s;

    /* transition-timing-function:
    ease(기본값)
    ease-in : 시작 빠르게
    ease-out : 끝이 빠르게
    linear : 등속 
    
    */
    transition-timing-function: ease-in-out; 
}

.test3:hover {
    background-color: springgreen;
    transform: rotate(720deg);
}

/* 스타일 변형 딜레이(일정 시간 후 변형) */
.test4:hover {
    transform: translateX(100px);
}

/* 
transition-delay: 선언한 숫자만큼의 초가 지난 뒤 변형 일어남
*/
.test4 {
    transition-delay: 2s;
}